// Code generated by protoc-gen-go-zeropb. DO NOT EDIT.

package testpb

import (
	zeropb "github.com/cosmos/cosmos-proto/zeropb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
)

type ImportedMessage struct {
	ctx *zeropb.BufferContext
}

func (m *ImportedMessage) ProtoReflect() protoreflect.Message {
	return &msg_ImportedMessage{ctx: m.ctx}
}

type msg_ImportedMessage struct {
	ctx     *zeropb.BufferContext
	slowMsg protoreflect.Message
}

func (m *msg_ImportedMessage) Descriptor() protoreflect.MessageDescriptor {
	return md_ImportedMessage_Instance
}

func (m *msg_ImportedMessage) Type() protoreflect.MessageType {
	panic("TODO")
}

func (m *msg_ImportedMessage) New() protoreflect.Message {
	return &msg_ImportedMessage{ctx: m.ctx}
}

func (m *msg_ImportedMessage) Interface() protoreflect.ProtoMessage {
	return &ImportedMessage{ctx: m.ctx}
}

func (m *msg_ImportedMessage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

func (m *msg_ImportedMessage) Has(fd protoreflect.FieldDescriptor) bool {
	if f, ok := fd.(fd_ImportedMessage_Interface); ok {
		return f.has(m)
	}
	return m.slow().Has(fd)
}

func (m *msg_ImportedMessage) Get(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_ImportedMessage_Interface); ok {
		return f.get(m)
	}
	return m.slow().Get(fd)
}

func (m *msg_ImportedMessage) Set(fd protoreflect.FieldDescriptor, v protoreflect.Value) {
	if f, ok := fd.(fd_ImportedMessage_Interface); ok {
		f.set(m, v)
	} else {
		m.slow().Set(fd, v)
	}
}

func (m *msg_ImportedMessage) Clear(fd protoreflect.FieldDescriptor) {
	if f, ok := fd.(fd_ImportedMessage_Interface); ok {
		f.clear(m)
	} else {
		m.slow().Clear(fd)
	}
}

func (m *msg_ImportedMessage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_ImportedMessage_Interface); ok {
		return f.mutable(m)
	}
	return m.slow().Mutable(fd)
}

func (m *msg_ImportedMessage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_ImportedMessage_Interface); ok {
		return f.newField(m)
	}
	return m.slow().NewField(fd)
}

func (m *msg_ImportedMessage) WhichOneof(od protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	panic("TODO")
}

func (m *msg_ImportedMessage) GetUnknown() protoreflect.RawFields {
	return nil
}

func (m *msg_ImportedMessage) SetUnknown(u protoreflect.RawFields) {
	panic("unsupported")
}

func (m *msg_ImportedMessage) IsValid() bool {
	panic("TODO")
}

func (m *msg_ImportedMessage) ProtoMethods() *protoiface.Methods {
	return nil
}

func (m *msg_ImportedMessage) slow() protoreflect.Message {
	if m.slowMsg == nil {
		panic("TODO")
	}
	return m.slowMsg
}

type md_ImportedMessage struct{ protoreflect.MessageDescriptor }

func (md *md_ImportedMessage) Fields() protoreflect.FieldDescriptors {
	return fds_ImportedMessage_Instance
}

var md_ImportedMessage_Instance protoreflect.MessageDescriptor

type fd_ImportedMessage_Interface interface {
	has(*msg_ImportedMessage) bool
	get(*msg_ImportedMessage) protoreflect.Value
	set(*msg_ImportedMessage, protoreflect.Value)
	clear(*msg_ImportedMessage)
	mutable(*msg_ImportedMessage) protoreflect.Value
	newField(*msg_ImportedMessage) protoreflect.Value
}

var fds_ImportedMessage_Instance protoreflect.FieldDescriptors

func (m *ImportedMessage) Reset()         {}
func (m *ImportedMessage) ProtoMessage()  {}
func (m *ImportedMessage) String() string { return "" }

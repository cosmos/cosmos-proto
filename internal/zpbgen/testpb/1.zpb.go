// Code generated by protoc-gen-go-zeropb. DO NOT EDIT.

package testpb

import (
	zeropb "github.com/cosmos/cosmos-proto/zeropb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
)

type A struct {
	ctx *zeropb.BufferContext
}

// TODO Enum enum
func (m *A) SomeBoolean() bool {
	return m.ctx.ReadBool(0)
}

func (m *A) INT32() int32 {
	return int32(m.ctx.ReadUint32(1))
}

func (m *A) SINT32() int32 {
	return int32(m.ctx.ReadUint32(5))
}

func (m *A) UINT32() uint32 {
	return m.ctx.ReadUint32(9)
}

func (m *A) INT64() int64 {
	return int64(m.ctx.ReadUint64(13))
}

func (m *A) SING64() int64 {
	return int64(m.ctx.ReadUint64(21))
}

func (m *A) UINT64() uint64 {
	return m.ctx.ReadUint64(29)
}

func (m *A) SFIXED32() int32 {
	return int32(m.ctx.ReadUint32(37))
}

func (m *A) FIXED32() uint32 {
	return m.ctx.ReadUint32(41)
}

func (m *A) FLOAT() float32 {
	return float32(m.ctx.ReadUint32(45))
}

func (m *A) SFIXED64() int64 {
	return int64(m.ctx.ReadUint64(49))
}

func (m *A) FIXED64() uint64 {
	return m.ctx.ReadUint64(57)
}

func (m *A) DOUBLE() float64 {
	return float64(m.ctx.ReadUint64(65))
}

// TODO STRING string
// TODO BYTES bytes
// TODO MESSAGE message
// TODO MAP message
// TODO LIST message
// TODO ONEOF_B message
// TODO ONEOF_STRING string
// TODO LIST_ENUM enum
// TODO Imported message
// TODO Type string
// TODO Opt string
func (m *A) ProtoReflect() protoreflect.Message {
	return &msg_A{ctx: m.ctx}
}

type msg_A struct {
	ctx     *zeropb.BufferContext
	slowMsg protoreflect.Message
}

func (m *msg_A) Descriptor() protoreflect.MessageDescriptor {
	return md_A_Instance
}

func (m *msg_A) Type() protoreflect.MessageType {
	panic("TODO")
}

func (m *msg_A) New() protoreflect.Message {
	return &msg_A{ctx: m.ctx}
}

func (m *msg_A) Interface() protoreflect.ProtoMessage {
	return &A{ctx: m.ctx}
}

func (m *msg_A) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

func (m *msg_A) Has(fd protoreflect.FieldDescriptor) bool {
	if f, ok := fd.(fd_A_Interface); ok {
		return f.has(m)
	}
	return m.slow().Has(fd)
}

func (m *msg_A) Get(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_A_Interface); ok {
		return f.get(m)
	}
	return m.slow().Get(fd)
}

func (m *msg_A) Set(fd protoreflect.FieldDescriptor, v protoreflect.Value) {
	if f, ok := fd.(fd_A_Interface); ok {
		f.set(m, v)
	} else {
		m.slow().Set(fd, v)
	}
}

func (m *msg_A) Clear(fd protoreflect.FieldDescriptor) {
	if f, ok := fd.(fd_A_Interface); ok {
		f.clear(m)
	} else {
		m.slow().Clear(fd)
	}
}

func (m *msg_A) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_A_Interface); ok {
		return f.mutable(m)
	}
	return m.slow().Mutable(fd)
}

func (m *msg_A) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_A_Interface); ok {
		return f.newField(m)
	}
	return m.slow().NewField(fd)
}

func (m *msg_A) WhichOneof(od protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	panic("TODO")
}

func (m *msg_A) GetUnknown() protoreflect.RawFields {
	return nil
}

func (m *msg_A) SetUnknown(u protoreflect.RawFields) {
	panic("unsupported")
}

func (m *msg_A) IsValid() bool {
	panic("TODO")
}

func (m *msg_A) ProtoMethods() *protoiface.Methods {
	return nil
}

func (m *msg_A) slow() protoreflect.Message {
	if m.slowMsg == nil {
		panic("TODO")
	}
	return m.slowMsg
}

type md_A struct{ protoreflect.MessageDescriptor }

func (md *md_A) Fields() protoreflect.FieldDescriptors {
	return fds_A_Instance
}

var md_A_Instance protoreflect.MessageDescriptor

type fd_A_Interface interface {
	has(*msg_A) bool
	get(*msg_A) protoreflect.Value
	set(*msg_A, protoreflect.Value)
	clear(*msg_A)
	mutable(*msg_A) protoreflect.Value
	newField(*msg_A) protoreflect.Value
}

type fd_Enum struct{ protoreflect.FieldDescriptor }

func (fd *fd_Enum) has(msg *msg_A) bool {
}
func (fd *fd_Enum) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_Enum) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_Enum) clear(msg *msg_A)                       {}
func (fd *fd_Enum) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_SomeBoolean struct{ protoreflect.FieldDescriptor }

func (fd *fd_SomeBoolean) has(msg *msg_A) bool {
}
func (fd *fd_SomeBoolean) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_SomeBoolean) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_SomeBoolean) clear(msg *msg_A)                       {}
func (fd *fd_SomeBoolean) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_INT32 struct{ protoreflect.FieldDescriptor }

func (fd *fd_INT32) has(msg *msg_A) bool {
}
func (fd *fd_INT32) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_INT32) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_INT32) clear(msg *msg_A)                       {}
func (fd *fd_INT32) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_SINT32 struct{ protoreflect.FieldDescriptor }

func (fd *fd_SINT32) has(msg *msg_A) bool {
}
func (fd *fd_SINT32) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_SINT32) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_SINT32) clear(msg *msg_A)                       {}
func (fd *fd_SINT32) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_UINT32 struct{ protoreflect.FieldDescriptor }

func (fd *fd_UINT32) has(msg *msg_A) bool {
}
func (fd *fd_UINT32) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_UINT32) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_UINT32) clear(msg *msg_A)                       {}
func (fd *fd_UINT32) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_INT64 struct{ protoreflect.FieldDescriptor }

func (fd *fd_INT64) has(msg *msg_A) bool {
}
func (fd *fd_INT64) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_INT64) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_INT64) clear(msg *msg_A)                       {}
func (fd *fd_INT64) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_SING64 struct{ protoreflect.FieldDescriptor }

func (fd *fd_SING64) has(msg *msg_A) bool {
}
func (fd *fd_SING64) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_SING64) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_SING64) clear(msg *msg_A)                       {}
func (fd *fd_SING64) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_UINT64 struct{ protoreflect.FieldDescriptor }

func (fd *fd_UINT64) has(msg *msg_A) bool {
}
func (fd *fd_UINT64) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_UINT64) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_UINT64) clear(msg *msg_A)                       {}
func (fd *fd_UINT64) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_SFIXED32 struct{ protoreflect.FieldDescriptor }

func (fd *fd_SFIXED32) has(msg *msg_A) bool {
}
func (fd *fd_SFIXED32) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_SFIXED32) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_SFIXED32) clear(msg *msg_A)                       {}
func (fd *fd_SFIXED32) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_FIXED32 struct{ protoreflect.FieldDescriptor }

func (fd *fd_FIXED32) has(msg *msg_A) bool {
}
func (fd *fd_FIXED32) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_FIXED32) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_FIXED32) clear(msg *msg_A)                       {}
func (fd *fd_FIXED32) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_FLOAT struct{ protoreflect.FieldDescriptor }

func (fd *fd_FLOAT) has(msg *msg_A) bool {
}
func (fd *fd_FLOAT) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_FLOAT) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_FLOAT) clear(msg *msg_A)                       {}
func (fd *fd_FLOAT) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_SFIXED64 struct{ protoreflect.FieldDescriptor }

func (fd *fd_SFIXED64) has(msg *msg_A) bool {
}
func (fd *fd_SFIXED64) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_SFIXED64) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_SFIXED64) clear(msg *msg_A)                       {}
func (fd *fd_SFIXED64) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_FIXED64 struct{ protoreflect.FieldDescriptor }

func (fd *fd_FIXED64) has(msg *msg_A) bool {
}
func (fd *fd_FIXED64) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_FIXED64) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_FIXED64) clear(msg *msg_A)                       {}
func (fd *fd_FIXED64) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_DOUBLE struct{ protoreflect.FieldDescriptor }

func (fd *fd_DOUBLE) has(msg *msg_A) bool {
}
func (fd *fd_DOUBLE) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_DOUBLE) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_DOUBLE) clear(msg *msg_A)                       {}
func (fd *fd_DOUBLE) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_STRING struct{ protoreflect.FieldDescriptor }

func (fd *fd_STRING) has(msg *msg_A) bool {
}
func (fd *fd_STRING) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_STRING) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_STRING) clear(msg *msg_A)                       {}
func (fd *fd_STRING) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_BYTES struct{ protoreflect.FieldDescriptor }

func (fd *fd_BYTES) has(msg *msg_A) bool {
}
func (fd *fd_BYTES) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_BYTES) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_BYTES) clear(msg *msg_A)                       {}
func (fd *fd_BYTES) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_MESSAGE struct{ protoreflect.FieldDescriptor }

func (fd *fd_MESSAGE) has(msg *msg_A) bool {
}
func (fd *fd_MESSAGE) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_MESSAGE) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_MESSAGE) clear(msg *msg_A)                       {}
func (fd *fd_MESSAGE) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_MAP struct{ protoreflect.FieldDescriptor }

func (fd *fd_MAP) has(msg *msg_A) bool {
}
func (fd *fd_MAP) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_MAP) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_MAP) clear(msg *msg_A)                       {}
func (fd *fd_MAP) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_LIST struct{ protoreflect.FieldDescriptor }

func (fd *fd_LIST) has(msg *msg_A) bool {
}
func (fd *fd_LIST) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_LIST) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_LIST) clear(msg *msg_A)                       {}
func (fd *fd_LIST) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_ONEOF_B struct{ protoreflect.FieldDescriptor }

func (fd *fd_ONEOF_B) has(msg *msg_A) bool {
}
func (fd *fd_ONEOF_B) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_ONEOF_B) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_ONEOF_B) clear(msg *msg_A)                       {}
func (fd *fd_ONEOF_B) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_ONEOF_STRING struct{ protoreflect.FieldDescriptor }

func (fd *fd_ONEOF_STRING) has(msg *msg_A) bool {
}
func (fd *fd_ONEOF_STRING) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_ONEOF_STRING) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_ONEOF_STRING) clear(msg *msg_A)                       {}
func (fd *fd_ONEOF_STRING) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_LIST_ENUM struct{ protoreflect.FieldDescriptor }

func (fd *fd_LIST_ENUM) has(msg *msg_A) bool {
}
func (fd *fd_LIST_ENUM) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_LIST_ENUM) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_LIST_ENUM) clear(msg *msg_A)                       {}
func (fd *fd_LIST_ENUM) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_Imported struct{ protoreflect.FieldDescriptor }

func (fd *fd_Imported) has(msg *msg_A) bool {
}
func (fd *fd_Imported) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_Imported) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_Imported) clear(msg *msg_A)                       {}
func (fd *fd_Imported) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_Type struct{ protoreflect.FieldDescriptor }

func (fd *fd_Type) has(msg *msg_A) bool {
}
func (fd *fd_Type) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_Type) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_Type) clear(msg *msg_A)                       {}
func (fd *fd_Type) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

type fd_Opt struct{ protoreflect.FieldDescriptor }

func (fd *fd_Opt) has(msg *msg_A) bool {
}
func (fd *fd_Opt) get(msg *msg_A) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_Opt) set(msg *msg_A, v protoreflect.Value)   {}
func (fd *fd_Opt) clear(msg *msg_A)                       {}
func (fd *fd_Opt) newField(msg *msg_A) protoreflect.Value { return protoreflect.Value{} }

var fds_A_Instance protoreflect.FieldDescriptors

func (m *A) Reset()         {}
func (m *A) ProtoMessage()  {}
func (m *A) String() string { return "" }

type B struct {
	ctx *zeropb.BufferContext
}

// TODO X string
func (m *B) ProtoReflect() protoreflect.Message {
	return &msg_B{ctx: m.ctx}
}

type msg_B struct {
	ctx     *zeropb.BufferContext
	slowMsg protoreflect.Message
}

func (m *msg_B) Descriptor() protoreflect.MessageDescriptor {
	return md_B_Instance
}

func (m *msg_B) Type() protoreflect.MessageType {
	panic("TODO")
}

func (m *msg_B) New() protoreflect.Message {
	return &msg_B{ctx: m.ctx}
}

func (m *msg_B) Interface() protoreflect.ProtoMessage {
	return &B{ctx: m.ctx}
}

func (m *msg_B) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

func (m *msg_B) Has(fd protoreflect.FieldDescriptor) bool {
	if f, ok := fd.(fd_B_Interface); ok {
		return f.has(m)
	}
	return m.slow().Has(fd)
}

func (m *msg_B) Get(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_B_Interface); ok {
		return f.get(m)
	}
	return m.slow().Get(fd)
}

func (m *msg_B) Set(fd protoreflect.FieldDescriptor, v protoreflect.Value) {
	if f, ok := fd.(fd_B_Interface); ok {
		f.set(m, v)
	} else {
		m.slow().Set(fd, v)
	}
}

func (m *msg_B) Clear(fd protoreflect.FieldDescriptor) {
	if f, ok := fd.(fd_B_Interface); ok {
		f.clear(m)
	} else {
		m.slow().Clear(fd)
	}
}

func (m *msg_B) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_B_Interface); ok {
		return f.mutable(m)
	}
	return m.slow().Mutable(fd)
}

func (m *msg_B) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	if f, ok := fd.(fd_B_Interface); ok {
		return f.newField(m)
	}
	return m.slow().NewField(fd)
}

func (m *msg_B) WhichOneof(od protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	panic("TODO")
}

func (m *msg_B) GetUnknown() protoreflect.RawFields {
	return nil
}

func (m *msg_B) SetUnknown(u protoreflect.RawFields) {
	panic("unsupported")
}

func (m *msg_B) IsValid() bool {
	panic("TODO")
}

func (m *msg_B) ProtoMethods() *protoiface.Methods {
	return nil
}

func (m *msg_B) slow() protoreflect.Message {
	if m.slowMsg == nil {
		panic("TODO")
	}
	return m.slowMsg
}

type md_B struct{ protoreflect.MessageDescriptor }

func (md *md_B) Fields() protoreflect.FieldDescriptors {
	return fds_B_Instance
}

var md_B_Instance protoreflect.MessageDescriptor

type fd_B_Interface interface {
	has(*msg_B) bool
	get(*msg_B) protoreflect.Value
	set(*msg_B, protoreflect.Value)
	clear(*msg_B)
	mutable(*msg_B) protoreflect.Value
	newField(*msg_B) protoreflect.Value
}

type fd_X struct{ protoreflect.FieldDescriptor }

func (fd *fd_X) has(msg *msg_B) bool {
}
func (fd *fd_X) get(msg *msg_B) protoreflect.Value      { return protoreflect.Value{} }
func (fd *fd_X) set(msg *msg_B, v protoreflect.Value)   {}
func (fd *fd_X) clear(msg *msg_B)                       {}
func (fd *fd_X) newField(msg *msg_B) protoreflect.Value { return protoreflect.Value{} }

var fds_B_Instance protoreflect.FieldDescriptors

func (m *B) Reset()         {}
func (m *B) ProtoMessage()  {}
func (m *B) String() string { return "" }
